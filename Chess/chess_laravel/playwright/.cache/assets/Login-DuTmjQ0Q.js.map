{"version":3,"file":"Login-DuTmjQ0Q.js","sources":["../../../resources/js/Pages/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Inertia } from '@inertiajs/inertia';\nimport { usePage } from '@inertiajs/inertia-react';\n\nconst Login = ({ isOpen, onClose }) => {\n  const { errors } = usePage().props;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    Inertia.post('/login', { username, password }, {\n      onSuccess: () => {\n        setUsername('');\n        setPassword('')\n        setTimeout(() => {\n          if (onClose) onClose();\n        }, 500);\n      },\n    });\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <div className=\"close-button-container\">\n          <button onClick={onClose} className=\"close-button\">Ã—</button>\n        </div>\n        <h2>Login</h2>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <label htmlFor=\"username\">Username:</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder=\"Username\"\n            />\n            {errors.username && <div className=\"error-message\">{errors.username}</div>}\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password:</label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Password\"\n            />\n            {errors.password && <div className=\"error-message\">{errors.password}</div>}\n          </div>\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;"],"names":["useState","Inertia","jsxDEV","this"],"mappings":"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"}