import{j as v}from"./app-D6-Vn2ke.js";class p{constructor(t,i,e){this.matrixPosition={x:t,y:i},this.white=e,this.taken=!1,this.hasMoved=!1}move(t,i){this.matrixPosition.x=t,this.matrixPosition.y=i,this.hasMoved=!0}clone(){const t=new this.constructor(this.matrixPosition.x,this.matrixPosition.y,this.white);return t.taken=this.taken,t.hasMoved=this.hasMoved,t}canMove(t,i,e){return!1}generateMoves(t){return[]}}const T="/build/assets/WhitePawn-DDSTqkDV.png",L="/build/assets/BlackPawn-CoKSC4Nu.png";class I extends p{canMove(t,i,e){const s=this.white?-1:1,r=this.white?6:1;if(t===this.matrixPosition.x&&i===this.matrixPosition.y+s&&!e.getPieceAt(t,i)||t===this.matrixPosition.x&&i===this.matrixPosition.y+2*s&&this.matrixPosition.y===r&&!e.getPieceAt(t,this.matrixPosition.y+s)&&!e.getPieceAt(t,i))return!0;if(Math.abs(t-this.matrixPosition.x)===1&&i===this.matrixPosition.y+s){const o=e.getPieceAt(t,i);return o&&o.white!==this.white}return!1}generateMoves(t){const i=[],e=this.white?-1:1;t.getPieceAt(this.matrixPosition.x,this.matrixPosition.y+e)||i.push({x:this.matrixPosition.x,y:this.matrixPosition.y+e});const s=this.white?6:1;this.matrixPosition.y===s&&!t.getPieceAt(this.matrixPosition.x,this.matrixPosition.y+e)&&!t.getPieceAt(this.matrixPosition.x,this.matrixPosition.y+2*e)&&i.push({x:this.matrixPosition.x,y:this.matrixPosition.y+2*e});for(let r of[-1,1]){const o=t.getPieceAt(this.matrixPosition.x+r,this.matrixPosition.y+e);o&&o.white!==this.white&&i.push({x:this.matrixPosition.x+r,y:this.matrixPosition.y+e})}return i}render(){return v.jsx("img",{src:this.white?T:L,alt:"Pawn",style:{width:"100%",height:"100%"}})}}const S="/build/assets/WhiteRook-Bzu2i_p0.png",X="/build/assets/BlackRook-BEU_bG0J.png";class y extends p{canMove(t,i,e){if(t!==this.matrixPosition.x&&i!==this.matrixPosition.y)return!1;const s=t>this.matrixPosition.x?1:t<this.matrixPosition.x?-1:0,r=i>this.matrixPosition.y?1:i<this.matrixPosition.y?-1:0;let o=this.matrixPosition.x+s,a=this.matrixPosition.y+r;for(;o!==t||a!==i;){if(e.getPieceAt(o,a))return!1;o+=s,a+=r}const h=e.getPieceAt(t,i);return!h||h.white!==this.white}generateMoves(t){const i=[];return[{dx:1,dy:0},{dx:-1,dy:0},{dx:0,dy:1},{dx:0,dy:-1}].forEach(({dx:s,dy:r})=>{let o=this.matrixPosition.x+s,a=this.matrixPosition.y+r;for(;o>=0&&o<8&&a>=0&&a<8&&!t.getPieceAt(o,a);)i.push({x:o,y:a}),o+=s,a+=r;const h=t.getPieceAt(o,a);h&&h.white!==this.white&&i.push({x:o,y:a})}),i}render(){return v.jsx("img",{src:this.white?S:X,alt:"Rook",style:{width:"100%",height:"100%"}})}}const _="/build/assets/WhiteKnight-td7ohImi.png",F="/build/assets/BlackKnight-Bw5nkCIe.png";class j extends p{canMove(t,i,e){const s=Math.abs(this.matrixPosition.x-t),r=Math.abs(this.matrixPosition.y-i);return s===2&&r===1||s===1&&r===2}generateMoves(t){const i=[];return[{dx:2,dy:1},{dx:2,dy:-1},{dx:-2,dy:1},{dx:-2,dy:-1},{dx:1,dy:2},{dx:1,dy:-2},{dx:-1,dy:2},{dx:-1,dy:-2}].forEach(({dx:s,dy:r})=>{const o=this.matrixPosition.x+s,a=this.matrixPosition.y+r;if(o>=0&&o<8&&a>=0&&a<8){const h=t.getPieceAt(o,a);(!h||h.white!==this.white)&&i.push({x:o,y:a})}}),i}render(){return v.jsx("img",{src:this.white?_:F,alt:"Knight",style:{width:"100%",height:"100%"}})}}const N="/build/assets/WhiteBishop-BJRdsUrQ.png",O="/build/assets/BlackBishop-Dg9iklNX.png";class d extends p{canMove(t,i,e){if(Math.abs(t-this.matrixPosition.x)!==Math.abs(i-this.matrixPosition.y))return!1;const s=t>this.matrixPosition.x?1:-1,r=i>this.matrixPosition.y?1:-1;let o=this.matrixPosition.x+s,a=this.matrixPosition.y+r;for(;o!==t||a!==i;){if(e.getPieceAt(o,a))return!1;o+=s,a+=r}const h=e.getPieceAt(t,i);return!h||h.white!==this.white}generateMoves(t){const i=[];return[{dx:1,dy:1},{dx:-1,dy:1},{dx:1,dy:-1},{dx:-1,dy:-1}].forEach(({dx:s,dy:r})=>{let o=this.matrixPosition.x+s,a=this.matrixPosition.y+r;for(;o>=0&&o<8&&a>=0&&a<8&&!t.getPieceAt(o,a);)i.push({x:o,y:a}),o+=s,a+=r;const h=t.getPieceAt(o,a);h&&h.white!==this.white&&i.push({x:o,y:a})}),i}render(){return v.jsx("img",{src:this.white?N:O,alt:"Bishop",style:{width:"100%",height:"100%"}})}}const Y="/build/assets/WhiteQueen-JwNoHkfC.png",J="/build/assets/BlackQueen-CEOy94br.png";class C extends p{canMove(t,i,e){const s=new y(this.matrixPosition.x,this.matrixPosition.y,this.white).canMove(t,i,e),r=new d(this.matrixPosition.x,this.matrixPosition.y,this.white).canMove(t,i,e);return s||r}generateMoves(t){const i=new y(this.matrixPosition.x,this.matrixPosition.y,this.white).generateMoves(t),e=new d(this.matrixPosition.x,this.matrixPosition.y,this.white).generateMoves(t);return[...i,...e]}render(){return v.jsx("img",{src:this.white?Y:J,alt:"Queen",style:{width:"100%",height:"100%"}})}}const U="/build/assets/WhiteKing-D-a6h-6i.png",V="/build/assets/BlackKing-ut6FM1LX.png";class k extends p{canMove(t,i,e){const s=Math.abs(this.matrixPosition.x-t),r=Math.abs(this.matrixPosition.y-i);return s<=1&&r<=1||s===2&&r===0}generateMoves(t){const i=[];if([{dx:1,dy:0},{dx:-1,dy:0},{dx:0,dy:1},{dx:0,dy:-1},{dx:1,dy:1},{dx:1,dy:-1},{dx:-1,dy:1},{dx:-1,dy:-1}].forEach(({dx:s,dy:r})=>{const o=this.matrixPosition.x+s,a=this.matrixPosition.y+r;if(o>=0&&o<8&&a>=0&&a<8){const h=t.getPieceAt(o,a);(!h||h.white!==this.white)&&i.push({x:o,y:a})}}),!this.hasMoved){const s=this.matrixPosition.y;if(!t.getPieceAt(5,s)&&!t.getPieceAt(6,s)){const r=t.getPieceAt(7,s);r&&r.white===this.white&&!r.hasMoved&&i.push({x:6,y:s,castling:"kingside"})}if(!t.getPieceAt(1,s)&&!t.getPieceAt(2,s)&&!t.getPieceAt(3,s)){const r=t.getPieceAt(0,s);r&&r.white===this.white&&!r.hasMoved&&i.push({x:2,y:s,castling:"queenside"})}}return i}render(){return v.jsx("img",{src:this.white?U:V,alt:"King",style:{width:"100%",height:"100%"}})}}const G=(n,t)=>{const i=b(n,t);let e=!1;for(let s of i){const r=W(n,{from:s.from,to:s.to,promotion:s.promotion,castling:s.castling});if(!g(r,t)){e=!0;break}}return e?!1:g(n,t)?t?"Black wins by checkmate":"White wins by checkmate":"Draw by stalemate"},q=(n,t)=>n.generateMoves(t).map(e=>({from:n.matrixPosition,to:e,promotion:e.promotion,castling:e.castling})).filter(e=>{const s=W(t,e);return!g(s,n.white)}),M=(n,t,i,e=-1/0,s=1/0)=>{const r=G(n,i);if(t===0||r)return r==="checkmate"?{evaluation:i?-1/0:1/0,move:null}:r==="stalemate"?{evaluation:0,move:null}:{evaluation:H(n),move:null};let o=null;if(i){let a=-1/0;const h=b(n,!0);for(let c of h){const m=n.getPieceAt(c.from.x,c.from.y);if(m instanceof I&&m.white&&c.to.y===0){let f=-1/0,B=null;for(let K of["queen","rook","bishop","knight"]){const x=n.clone(),l=x.getPieceAt(c.from.x,c.from.y),E=x.getPieceAt(c.to.x,c.to.y);E&&(x.pieces=x.pieces.filter(w=>w!==E)),x.pieces=x.pieces.filter(w=>w!==l);let u;switch(K){case"rook":u=new y(c.to.x,c.to.y,l.white);break;case"bishop":u=new d(c.to.x,c.to.y,l.white);break;case"knight":u=new j(c.to.x,c.to.y,l.white);break;default:u=new C(c.to.x,c.to.y,l.white)}x.pieces.push(u);const R=M(x,t-1,!1,e,s);if(R.evaluation>f&&(f=R.evaluation,B=K),e=Math.max(e,f),s<=e)break}f>a&&(a=f,o={...c,promotion:B});continue}const A=W(n,c);if(g(A,m.white))continue;const P=M(A,t-1,!1,e,s).evaluation;if(P>a&&(a=P,o=c),e=Math.max(e,P),s<=e)break}return o===null&&h.length>0&&(o=h[0]),{evaluation:a,move:o}}else{let a=1/0;const h=b(n,!1);for(let c of h){const m=n.getPieceAt(c.from.x,c.from.y);if(m instanceof I&&!m.white&&c.to.y===7){let f=1/0,B=null;for(let K of["queen","rook","bishop","knight"]){const x=n.clone(),l=x.getPieceAt(c.from.x,c.from.y),E=x.getPieceAt(c.to.x,c.to.y);E&&(x.pieces=x.pieces.filter(w=>w!==E)),x.pieces=x.pieces.filter(w=>w!==l);let u;switch(K){case"rook":u=new y(c.to.x,c.to.y,l.white);break;case"bishop":u=new d(c.to.x,c.to.y,l.white);break;case"knight":u=new j(c.to.x,c.to.y,l.white);break;default:u=new C(c.to.x,c.to.y,l.white)}x.pieces.push(u);const R=M(x,t-1,!0,e,s);if(R.evaluation<f&&(f=R.evaluation,B=K),s=Math.min(s,f),s<=e)break}f<a&&(a=f,o={...c,promotion:B});continue}const A=W(n,c);if(g(A,m.white))continue;const P=M(A,t-1,!0,e,s).evaluation;if(P<a&&(a=P,o=c),s=Math.min(s,P),s<=e)break}return o===null&&h.length>0&&(o=h[0]),{evaluation:a,move:o}}},b=(n,t)=>{const i=[];return n.pieces.forEach(e=>{if(e.white!==t)return;q(e,n).forEach(r=>{n.getPieceAt(r.x,r.y)?i.unshift({from:e.matrixPosition,to:r,capture:!0,value:D(n.getPieceAt(r.x,r.y))}):i.push({from:e.matrixPosition,to:r,capture:!1})})}),i.sort((e,s)=>(s.value||0)-(e.value||0)),i},g=(n,t)=>{const i=n.pieces.find(s=>s instanceof k&&s.white===t);if(!i)return!1;let e=[];return n.pieces.forEach(s=>{s.white!==t&&(e=e.concat(s.generateMoves(n)))}),e.some(s=>s.x===i.matrixPosition.x&&s.y===i.matrixPosition.y)},W=(n,t)=>{if(!t||!t.from||!t.to)return n.clone();const i=n.clone(),e=i.getPieceAt(t.from.x,t.from.y);if(!e)return i;if(e instanceof I&&(e.white&&t.to.y===0||!e.white&&t.to.y===7)){const s=t.promotion?t.promotion.toLowerCase():"queen",r=i.getPieceAt(t.to.x,t.to.y);r&&r.white!==e.white&&(i.pieces=i.pieces.filter(a=>a!==r)),i.pieces=i.pieces.filter(a=>a!==e);let o;switch(s){case"rook":o=new y(t.to.x,t.to.y,e.white);break;case"bishop":o=new d(t.to.x,t.to.y,e.white);break;case"knight":o=new j(t.to.x,t.to.y,e.white);break;default:o=new C(t.to.x,t.to.y,e.white)}return i.pieces.push(o),g(i,e.white)?n:i}if(i.move(t.from,t.to),t.castling&&e.constructor.name==="King"){const s=t.to.y;if(t.castling==="kingside"){const r={x:7,y:s},o={x:5,y:s};i.move(r,o)}else if(t.castling==="queenside"){const r={x:0,y:s},o={x:3,y:s};i.move(r,o)}}return g(i,e.white)?n:i},H=n=>{let t=0;n.pieces.forEach(o=>{o.taken||(t+=o.white?D(o):-D(o),t+=o.white?Q(o):-Q(o))}),g(n,!0)&&(t-=.5),g(n,!1)&&(t+=.5);const i=n.pieces.filter(o=>o.white&&!(o instanceof k)),e=n.pieces.filter(o=>!o.white&&!(o instanceof k)),s=n.pieces.find(o=>o instanceof k&&o.white),r=n.pieces.find(o=>o instanceof k&&!o.white);if(s&&r){if(i.length===0&&e.length>0){const o=Math.abs(s.matrixPosition.x-r.matrixPosition.x),a=Math.abs(s.matrixPosition.y-r.matrixPosition.y),h=Math.max(o,a);t-=(7-h)*.5}if(e.length===0&&i.length>0){const o=Math.abs(s.matrixPosition.x-r.matrixPosition.x),a=Math.abs(s.matrixPosition.y-r.matrixPosition.y),h=Math.max(o,a);t+=(7-h)*.5}}return t},Q=n=>{const{x:t,y:i}=n.matrixPosition;let e=0;return(t===3||t===4)&&(i===3||i===4)&&(e+=1),(n instanceof j||n instanceof d)&&(e+=n.hasMoved?.5:-.5),n instanceof I&&(t===3||t===4)&&(e+=n.hasMoved?.3:-.3),n instanceof y&&(e+=n.hasMoved?.2:-.2),n instanceof C&&(e+=n.hasMoved?.1:-.1),e},D=n=>n instanceof I?1:n instanceof j||n instanceof d?3:n instanceof y?5:n instanceof C?9:n instanceof k?100:0,Z=Object.freeze(Object.defineProperty({__proto__:null,applyMove:W,default:M,generateMovesForPlayer:b,getLegalMovesForPiece:q,runMinimax:M},Symbol.toStringTag,{value:"Module"}));export{d as B,j as K,I as P,C as Q,y as R,Y as W,S as a,N as b,_ as c,W as d,k as e,Z as f,M as r};
