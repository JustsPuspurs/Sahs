import{j as A}from"./app-BtD58myP.js";class B{constructor(t,i,o){this.matrixPosition={x:t,y:i},this.white=o,this.taken=!1,this.hasMoved=!1}move(t,i){this.matrixPosition.x=t,this.matrixPosition.y=i,this.hasMoved=!0}clone(){const t=new this.constructor(this.matrixPosition.x,this.matrixPosition.y,this.white);return t.taken=this.taken,t.hasMoved=this.hasMoved,t}canMove(t,i,o){return!1}generateMoves(t){return[]}}const Q="/build/assets/WhitePawn-DDSTqkDV.png",D="/build/assets/BlackPawn-CoKSC4Nu.png";class q extends B{canMove(t,i,o){const e=this.white?-1:1,r=this.white?6:1;if(t===this.matrixPosition.x&&i===this.matrixPosition.y+e&&!o.getPieceAt(t,i)||t===this.matrixPosition.x&&i===this.matrixPosition.y+2*e&&this.matrixPosition.y===r&&!o.getPieceAt(t,this.matrixPosition.y+e)&&!o.getPieceAt(t,i))return!0;if(Math.abs(t-this.matrixPosition.x)===1&&i===this.matrixPosition.y+e){const s=o.getPieceAt(t,i);return s&&s.white!==this.white}return!1}generateMoves(t){const i=[],o=this.white?-1:1;t.getPieceAt(this.matrixPosition.x,this.matrixPosition.y+o)||i.push({x:this.matrixPosition.x,y:this.matrixPosition.y+o});const e=this.white?6:1;this.matrixPosition.y===e&&!t.getPieceAt(this.matrixPosition.x,this.matrixPosition.y+o)&&!t.getPieceAt(this.matrixPosition.x,this.matrixPosition.y+2*o)&&i.push({x:this.matrixPosition.x,y:this.matrixPosition.y+2*o});for(let r of[-1,1]){const s=t.getPieceAt(this.matrixPosition.x+r,this.matrixPosition.y+o);s&&s.white!==this.white&&i.push({x:this.matrixPosition.x+r,y:this.matrixPosition.y+o})}return i}render(){return A.jsx("img",{src:this.white?Q:D,alt:"Pawn",style:{width:"100%",height:"100%"}})}}const N="/build/assets/WhiteRook-Bzu2i_p0.png",T="/build/assets/BlackRook-BEU_bG0J.png";class k extends B{constructor(t,i,o){super(t,i,o),this.hasMoved=!1}canMove(t,i,o){if(t!==this.matrixPosition.x&&i!==this.matrixPosition.y)return!1;const e=t>this.matrixPosition.x?1:t<this.matrixPosition.x?-1:0,r=i>this.matrixPosition.y?1:i<this.matrixPosition.y?-1:0;let s=this.matrixPosition.x+e,a=this.matrixPosition.y+r;for(;s!==t||a!==i;){if(o.getPieceAt(s,a))return!1;s+=e,a+=r}const h=o.getPieceAt(t,i);return!h||h.white!==this.white}generateMoves(t){const i=[];return[{dx:1,dy:0},{dx:-1,dy:0},{dx:0,dy:1},{dx:0,dy:-1}].forEach(({dx:e,dy:r})=>{let s=this.matrixPosition.x+e,a=this.matrixPosition.y+r;for(;s>=0&&s<8&&a>=0&&a<8&&!t.getPieceAt(s,a);)i.push({x:s,y:a}),s+=e,a+=r;const h=t.getPieceAt(s,a);h&&h.white!==this.white&&i.push({x:s,y:a})}),i}render(){return A.jsx("img",{src:this.white?N:T,alt:"Rook",style:{width:"100%",height:"100%"}})}}const X="/build/assets/WhiteKnight-td7ohImi.png",_="/build/assets/BlackKnight-Bw5nkCIe.png";class E extends B{canMove(t,i,o){const e=Math.abs(this.matrixPosition.x-t),r=Math.abs(this.matrixPosition.y-i);return e===2&&r===1||e===1&&r===2}generateMoves(t){const i=[];return[{dx:2,dy:1},{dx:2,dy:-1},{dx:-2,dy:1},{dx:-2,dy:-1},{dx:1,dy:2},{dx:1,dy:-2},{dx:-1,dy:2},{dx:-1,dy:-2}].forEach(({dx:e,dy:r})=>{const s=this.matrixPosition.x+e,a=this.matrixPosition.y+r;if(s>=0&&s<8&&a>=0&&a<8){const h=t.getPieceAt(s,a);(!h||h.white!==this.white)&&i.push({x:s,y:a})}}),i}render(){return A.jsx("img",{src:this.white?X:_,alt:"Knight",style:{width:"100%",height:"100%"}})}}const F="/build/assets/WhiteBishop-BJRdsUrQ.png",Y="/build/assets/BlackBishop-Dg9iklNX.png";class v extends B{canMove(t,i,o){if(Math.abs(t-this.matrixPosition.x)!==Math.abs(i-this.matrixPosition.y))return!1;const e=t>this.matrixPosition.x?1:-1,r=i>this.matrixPosition.y?1:-1;let s=this.matrixPosition.x+e,a=this.matrixPosition.y+r;for(;s!==t||a!==i;){if(o.getPieceAt(s,a))return!1;s+=e,a+=r}const h=o.getPieceAt(t,i);return!h||h.white!==this.white}generateMoves(t){const i=[];return[{dx:1,dy:1},{dx:-1,dy:1},{dx:1,dy:-1},{dx:-1,dy:-1}].forEach(({dx:e,dy:r})=>{let s=this.matrixPosition.x+e,a=this.matrixPosition.y+r;for(;s>=0&&s<8&&a>=0&&a<8&&!t.getPieceAt(s,a);)i.push({x:s,y:a}),s+=e,a+=r;const h=t.getPieceAt(s,a);h&&h.white!==this.white&&i.push({x:s,y:a})}),i}render(){return A.jsx("img",{src:this.white?F:Y,alt:"Bishop",style:{width:"100%",height:"100%"}})}}const J="/build/assets/WhiteQueen-JwNoHkfC.png",L="/build/assets/BlackQueen-CEOy94br.png";class C extends B{canMove(t,i,o){const e=new k(this.matrixPosition.x,this.matrixPosition.y,this.white).canMove(t,i,o),r=new v(this.matrixPosition.x,this.matrixPosition.y,this.white).canMove(t,i,o);return e||r}generateMoves(t){const i=new k(this.matrixPosition.x,this.matrixPosition.y,this.white).generateMoves(t),o=new v(this.matrixPosition.x,this.matrixPosition.y,this.white).generateMoves(t);return[...i,...o]}render(){return A.jsx("img",{src:this.white?J:L,alt:"Queen",style:{width:"100%",height:"100%"}})}}const b="/build/assets/WhiteKing-D-a6h-6i.png",H="/build/assets/BlackKing-ut6FM1LX.png";class M extends B{constructor(t,i,o){super(t,i,o),this.hasMoved=!1}canMove(t,i,o){const e=Math.abs(this.matrixPosition.x-t),r=Math.abs(this.matrixPosition.y-i);return e<=1&&r<=1||e===2&&r===0}generateMoves(t){const i=[];if([{dx:1,dy:0},{dx:-1,dy:0},{dx:0,dy:1},{dx:0,dy:-1},{dx:1,dy:1},{dx:1,dy:-1},{dx:-1,dy:1},{dx:-1,dy:-1}].forEach(({dx:e,dy:r})=>{const s=this.matrixPosition.x+e,a=this.matrixPosition.y+r;if(s>=0&&s<8&&a>=0&&a<8){const h=t.getPieceAt(s,a);(!h||h.white!==this.white)&&i.push({x:s,y:a})}}),!this.hasMoved&&!this.isSquareAttacked(this.matrixPosition.x,this.matrixPosition.y,t)){const e=this.matrixPosition.y,r=t.getPieceAt(5,e),s=t.getPieceAt(6,e),a=this.isSquareAttacked(5,e,t),h=this.isSquareAttacked(6,e,t),c=t.getPieceAt(7,e);console.log("Castling debug (kingside):",{kingHasMoved:this.hasMoved,kingInCheck:this.isSquareAttacked(this.matrixPosition.x,this.matrixPosition.y,t),fOccupied:r,gOccupied:s,fAttacked:a,gAttacked:h,kingsideRook:c,kingsideRookMoved:c?c.hasMoved:"No Rook"}),!r&&!s&&!a&&!h&&c&&c.constructor.name==="Rook"&&!c.hasMoved&&i.push({x:6,y:e,castling:"kingside"});const P=t.getPieceAt(1,e),w=t.getPieceAt(2,e),m=t.getPieceAt(3,e),u=this.isSquareAttacked(2,e,t),d=this.isSquareAttacked(3,e,t),f=t.getPieceAt(0,e);console.log("Castling debug (queenside):",{bOccupied:P,cOccupied:w,dOccupied:m,cAttacked:u,dAttacked:d,queensideRook:f,queensideRookMoved:f?f.hasMoved:"No Rook"}),!P&&!w&&!m&&!u&&!d&&f&&f.constructor.name==="Rook"&&!f.hasMoved&&i.push({x:2,y:e,castling:"queenside"})}return i}isSquareAttacked(t,i,o){return o.pieces.some(e=>{if(e.white===this.white||e.constructor.name==="King")return!1;if(e.constructor.name==="Pawn"){const r=e.white?-1:1;return t===e.matrixPosition.x-1&&i===e.matrixPosition.y+r||t===e.matrixPosition.x+1&&i===e.matrixPosition.y+r}return e.canMove(t,i,o)})}render(){return A.jsx("img",{src:this.white?b:H,alt:"King",style:{width:"100%",height:"100%"}})}}const U=(n,t)=>{const i=S(n,t);let o=!1;for(let e of i)if(W(n,e)!==n){o=!0;break}return o?!1:I(n,t)?"checkmate":"stalemate"},p=(n,t,i,o=-1/0,e=1/0)=>{const r=U(n,i);if(t===0||r)return r==="checkmate"?{evaluation:i?-1/0:1/0,move:null}:r==="stalemate"?{evaluation:0,move:null}:{evaluation:V(n),move:null};let s=null;if(i){let a=-1/0;const h=S(n,!0);for(let c of h){const P=n.getPieceAt(c.from.x,c.from.y);if(P instanceof q&&P.white&&c.to.y===0){let u=-1/0,d=null;for(let f of["queen","rook","bishop","knight"]){const x=n.clone(),l=x.getPieceAt(c.from.x,c.from.y),K=x.getPieceAt(c.to.x,c.to.y);K&&(x.pieces=x.pieces.filter(y=>y!==K)),x.pieces=x.pieces.filter(y=>y!==l);let g;switch(f){case"rook":g=new k(c.to.x,c.to.y,l.white);break;case"bishop":g=new v(c.to.x,c.to.y,l.white);break;case"knight":g=new E(c.to.x,c.to.y,l.white);break;default:g=new C(c.to.x,c.to.y,l.white)}x.pieces.push(g);const R=p(x,t-1,!1,o,e);if(R.evaluation>u&&(u=R.evaluation,d=f),o=Math.max(o,u),e<=o)break}u>a&&(a=u,s={...c,promotion:d});continue}const w=W(n,c);if(w===n)continue;const m=p(w,t-1,!1,o,e).evaluation;if(m>a&&(a=m,s=c),o=Math.max(o,m),e<=o)break}return s===null&&h.length>0&&(s=h[0]),{evaluation:a,move:s}}else{let a=1/0;const h=S(n,!1);for(let c of h){const P=n.getPieceAt(c.from.x,c.from.y);if(P instanceof q&&!P.white&&c.to.y===7){let u=1/0,d=null;for(let f of["queen","rook","bishop","knight"]){const x=n.clone(),l=x.getPieceAt(c.from.x,c.from.y),K=x.getPieceAt(c.to.x,c.to.y);K&&(x.pieces=x.pieces.filter(y=>y!==K)),x.pieces=x.pieces.filter(y=>y!==l);let g;switch(f){case"rook":g=new k(c.to.x,c.to.y,l.white);break;case"bishop":g=new v(c.to.x,c.to.y,l.white);break;case"knight":g=new E(c.to.x,c.to.y,l.white);break;default:g=new C(c.to.x,c.to.y,l.white)}x.pieces.push(g);const R=p(x,t-1,!0,o,e);if(R.evaluation<u&&(u=R.evaluation,d=f),e=Math.min(e,u),e<=o)break}u<a&&(a=u,s={...c,promotion:d});continue}const w=W(n,c);if(w===n)continue;const m=p(w,t-1,!0,o,e).evaluation;if(m<a&&(a=m,s=c),e=Math.min(e,m),e<=o)break}return s===null&&h.length>0&&(s=h[0]),{evaluation:a,move:s}}},S=(n,t)=>{const i=[];return n.pieces.forEach(o=>{if(o.white!==t)return;o.generateMoves(n).forEach(r=>{const s=n.getPieceAt(r.x,r.y);s&&s.white!==o.white?i.unshift({from:o.matrixPosition,to:r,capture:!0,value:j(s)}):i.push({from:o.matrixPosition,to:r,capture:!1})})}),i.sort((o,e)=>(e.value||0)-(o.value||0)),i},I=(n,t)=>{const i=n.pieces.find(e=>e instanceof M&&e.white===t);return i?S(n,!t).some(e=>e.to.x===i.matrixPosition.x&&e.to.y===i.matrixPosition.y):!1},W=(n,t)=>{if(!t||!t.from||!t.to)return n.clone();const i=n.clone(),o=i.getPieceAt(t.from.x,t.from.y);if(!o)return i;if(o instanceof q&&(o.white&&t.to.y===0||!o.white&&t.to.y===7)){const e=t.promotion?t.promotion.toLowerCase():"queen",r=i.getPieceAt(t.to.x,t.to.y);r&&r.white!==o.white&&(i.pieces=i.pieces.filter(a=>a!==r)),i.pieces=i.pieces.filter(a=>a!==o);let s;switch(e){case"rook":s=new k(t.to.x,t.to.y,o.white);break;case"bishop":s=new v(t.to.x,t.to.y,o.white);break;case"knight":s=new E(t.to.x,t.to.y,o.white);break;default:s=new C(t.to.x,t.to.y,o.white)}return i.pieces.push(s),I(i,o.white)?n:i}if(i.move(t.from,t.to),t.castling&&o.constructor.name==="King"){const e=t.to.y;if(t.castling==="kingside"){const r={x:7,y:e},s={x:5,y:e};i.move(r,s)}else if(t.castling==="queenside"){const r={x:0,y:e},s={x:3,y:e};i.move(r,s)}}return I(i,o.white)?n:i},V=n=>{let t=0;n.pieces.forEach(s=>{s.taken||(t+=s.white?j(s):-j(s),t+=s.white?O(s):-O(s))}),I(n,!0)&&(t-=.5),I(n,!1)&&(t+=.5);const i=n.pieces.filter(s=>s.white&&!(s instanceof M)),o=n.pieces.filter(s=>!s.white&&!(s instanceof M)),e=n.pieces.find(s=>s instanceof M&&s.white),r=n.pieces.find(s=>s instanceof M&&!s.white);if(e&&r){if(i.length===0&&o.length>0){const s=Math.abs(e.matrixPosition.x-r.matrixPosition.x),a=Math.abs(e.matrixPosition.y-r.matrixPosition.y),h=Math.max(s,a);t-=(7-h)*.5}if(o.length===0&&i.length>0){const s=Math.abs(e.matrixPosition.x-r.matrixPosition.x),a=Math.abs(e.matrixPosition.y-r.matrixPosition.y),h=Math.max(s,a);t+=(7-h)*.5}}return t},O=n=>{const{x:t,y:i}=n.matrixPosition;let o=0;return(t===3||t===4)&&(i===3||i===4)&&(o+=1),(n instanceof E||n instanceof v)&&(o+=n.hasMoved?.5:-.5),n instanceof q&&(t===3||t===4)&&(o+=n.hasMoved?.3:-.3),n instanceof k&&(o+=n.hasMoved?.2:-.2),n instanceof C&&(o+=n.hasMoved?.1:-.1),o},j=n=>n instanceof q?1:n instanceof E||n instanceof v?3:n instanceof k?5:n instanceof C?9:n instanceof M?100:0,z=Object.freeze(Object.defineProperty({__proto__:null,applyMove:W,default:p,generateMovesForPlayer:S,runMinimax:p},Symbol.toStringTag,{value:"Module"}));export{v as B,M as K,z as P,C as Q,k as R,J as W,N as a,F as b,X as c,W as d,E as e,p as r};
